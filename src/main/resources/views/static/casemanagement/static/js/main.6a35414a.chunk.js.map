{"version":3,"sources":["Pages/restore.js","Pages/backup.js","Pages/sync.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","DatabaseRestore","props","classes","console","log","Modal","isOpen","modalstatus","toggle","togglestatus","className","size","Form","ModalHeader","ModalBody","CardBody","Row","Col","md","maxFileSize","type","variant","color","startIcon","onClick","e","preventDefault","DataBaseUp","manifestSamples","Object","values","Alert","style","backgroundColor","fontWeight","fontSize","alert","DatabaseSyn","ul","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","justifyContent","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ExportImport","useState","modal3","setModal3","modal2","setModal2","modal","setModal","setcollectmodal","Fragment","Container","maxWidth","component","Grid","container","item","xs","sm","Card","CardHeader","title","titleTypographyProps","align","CardContent","Typography","CardActions","Button","fullWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a35414a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DatabaseRestore = (props) => {\r\n    const classes = useStyles()\r\n\r\n    console.log(props)\r\n\r\n\r\n\r\n  //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const DatabaseRestoreProcess = e => {\r\n      e.preventDefault()\r\n    //Closing of the modal \r\n    props.togglestatus();\r\n                    \r\n\r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n              <Form >\r\n            <ModalHeader toggle={props.togglestatus}>Database Restore</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        \r\n                                    <DropzoneArea\r\n                                        //onChange={(files) => console.log('Files:', files)}\r\n                                       // onChange = {(file1) => setFileToUpload(file1)}\r\n                                        //showFileNames=\"true\"\r\n                                        //acceptedFiles={['jar']}\r\n                                        maxFileSize ={'100000000'}\r\n            \r\n                                    />\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SettingsBackupRestoreIcon />}\r\n                                              onClick={()=> DatabaseRestoreProcess()}\r\n                                             \r\n                                          >   \r\n                                              Restore\r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              Cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseRestore;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DataBaseUp = (props) => {\r\n    const classes = useStyles()\r\n    const manifestSamples = props.manifestSamples && props.manifestSamples !==null ? props.manifestSamples : {};\r\n    const manifestSample= Object.values(manifestSamples);\r\n    const manifestSampleForUpDateFormDataObj= Object.values(manifestSamples);\r\n    console.log(props)\r\n\r\n\r\n\r\n    const BackupProcessing = e => {\r\n     alert ('Backup Processing. Please Wait...')\r\n    props.togglestatus();\r\n                    \r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n\r\n            <ModalHeader toggle={props.togglestatus}>Database Backup</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"dark\" style={{backgroundColor:'#9F9FA5', color:\"#000\" , fontWeight: 'bolder', fontSize:'14px'}}>\r\n                                            <p style={{marginTop: '.7rem' }}>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Are you Sure want to continue'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                               \r\n                                            </p>\r\n\r\n                                        </Alert>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<BackupIcon />}\r\n                                              onClick={()=>BackupProcessing()}\r\n                                             \r\n                                          >   \r\n                                              BackUp\r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              Cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBaseUp;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DatabaseSyn = (props) => {\r\n    const classes = useStyles()\r\n\r\n    console.log(props)\r\n\r\n\r\n\r\n  //const samplesdispatched ={\"sampleManifests\": [] };\r\n    const DatabaseSynProcess = e => {\r\n      e.preventDefault()\r\n    //Closing of the modal \r\n    props.togglestatus();\r\n                    \r\n\r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n              <Form >\r\n            <ModalHeader toggle={props.togglestatus}>Database Sync</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        \r\n                                    <DropzoneArea\r\n                                        //onChange={(files) => console.log('Files:', files)}\r\n                                       // onChange = {(file1) => setFileToUpload(file1)}\r\n                                        //showFileNames=\"true\"\r\n                                        //acceptedFiles={['jar']}\r\n                                        maxFileSize ={'100000000'}\r\n            \r\n                                    />\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SettingsBackupRestoreIcon />}\r\n                                              onClick={()=>DatabaseSynProcess()}\r\n                                             \r\n                                          >   \r\n                                              Sync Database\r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              Cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseSyn;\r\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport DatabaseRestore from './Pages/restore';\nimport DataBaseUp from './Pages/backup';\nimport DatabaseSyn from './Pages/sync'\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\n\n\nexport default function ExportImport() {\n  const classes = useStyles();\n  const [modal3, setModal3] = useState(false)//modal to View Backup\n  const togglemodal3 = () => setModal3(!modal3)\n  const [modal2, setModal2] = useState(false)//modal to View Restore\n  const togglemodal2 = () => setModal2(!modal2)\n  const [modal, setModal] = useState(false)//modal to View Restore\n  const togglemodal = () => setModal(!modal)\n  const [collectmodal, setcollectmodal] = useState([])//to collect array of datas into the modal and pass it as props\n  \n  function DatabaseModal (){\n    setcollectmodal();\n    setModal3(!modal3) \n  }\n\n  function DatabaseSynModal (){\n    setModal(!modal) \n  }\n  function DatabaseRestoreModal (){\n    setModal2(!modal2) \n  }\n\n  return (\n    <React.Fragment>  \n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n        \n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n         \n           <Grid item  xs={12} sm={12} md={4}>\n              <Card>\n                <CardHeader\n                  title='Database BackUp'\n                  titleTypographyProps={{ align: 'center' }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <div className={classes.cardPricing}>\n                    <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\n                       <BackupIcon  style={{ fontSize: 60 }}/> \n                    </Typography>\n                    \n                  </div>\n                  \n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant=\"contained\" color=\"primary\" onClick={() => DatabaseModal()}>\n                    BackUp\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item  xs={12} sm={12} md={4}>\n              <Card>\n                <CardHeader\n                  title='Database Restore'\n                  titleTypographyProps={{ align: 'center' }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <div className={classes.cardPricing}>\n                    <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\n                    <RestoreIcon  style={{ fontSize: 60 }}/> \n                    </Typography>\n                    \n                  </div>\n                  \n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant=\"contained\" onClick={()=>DatabaseRestoreModal()}>\n                    Restore\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item  xs={12} sm={12} md={4}>\n              <Card>\n                <CardHeader\n                  title='Database Sync'\n                  titleTypographyProps={{ align: 'center' }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <div className={classes.cardPricing}>\n                    <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\n                      <SettingsBackupRestoreIcon  style={{ fontSize: 60 }}/> \n                    </Typography>\n                    \n                  </div>\n                 \n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant=\"contained\" color=\"primary\" onClick={()=>DatabaseSynModal()}>\n                    Sync\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n        </Grid>\n      </Container>\n      <DataBaseUp modalstatus={modal3} togglestatus={togglemodal3} /> \n      <DatabaseRestore modalstatus={modal2} togglestatus={togglemodal2} />\n      <DatabaseSyn modalstatus={modal} togglestatus={togglemodal}  />\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}